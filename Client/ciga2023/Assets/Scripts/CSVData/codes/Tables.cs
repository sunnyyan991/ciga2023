
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using SimpleJSON;

namespace cfg
{
   
public sealed class Tables
{
    public csvParam.TbParam TbParam {get; }
    public csvSound.TbSound TbSound {get; }
    public csvIcon.TbIcon TbIcon {get; }
    public csvLanguage.TbLanguage TbLanguage {get; }
    public csvStage.TbStage TbStage {get; }
    public csvMonsterSpawn.TbMonsterSpawn TbMonsterSpawn {get; }
    public csvMonster.TbMonster TbMonster {get; }

    public Tables(System.Func<string, JSONNode> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        TbParam = new csvParam.TbParam(loader("csvparam_tbparam")); 
        tables.Add("csvParam.TbParam", TbParam);
        TbSound = new csvSound.TbSound(loader("csvsound_tbsound")); 
        tables.Add("csvSound.TbSound", TbSound);
        TbIcon = new csvIcon.TbIcon(loader("csvicon_tbicon")); 
        tables.Add("csvIcon.TbIcon", TbIcon);
        TbLanguage = new csvLanguage.TbLanguage(loader("csvlanguage_tblanguage")); 
        tables.Add("csvLanguage.TbLanguage", TbLanguage);
        TbStage = new csvStage.TbStage(loader("csvstage_tbstage")); 
        tables.Add("csvStage.TbStage", TbStage);
        TbMonsterSpawn = new csvMonsterSpawn.TbMonsterSpawn(loader("csvmonsterspawn_tbmonsterspawn")); 
        tables.Add("csvMonsterSpawn.TbMonsterSpawn", TbMonsterSpawn);
        TbMonster = new csvMonster.TbMonster(loader("csvmonster_tbmonster")); 
        tables.Add("csvMonster.TbMonster", TbMonster);

        TbParam.Resolve(tables); 
        TbSound.Resolve(tables); 
        TbIcon.Resolve(tables); 
        TbLanguage.Resolve(tables); 
        TbStage.Resolve(tables); 
        TbMonsterSpawn.Resolve(tables); 
        TbMonster.Resolve(tables); 
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        TbParam.TranslateText(translator); 
        TbSound.TranslateText(translator); 
        TbIcon.TranslateText(translator); 
        TbLanguage.TranslateText(translator); 
        TbStage.TranslateText(translator); 
        TbMonsterSpawn.TranslateText(translator); 
        TbMonster.TranslateText(translator); 
    }
}

}
