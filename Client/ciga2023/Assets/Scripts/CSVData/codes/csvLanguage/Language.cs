
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.csvLanguage
{

public sealed class Language :  Bright.Config.BeanBase 
{
    public Language(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["value"].IsString) { throw new SerializationException(); }  Value = _json["value"]; }
    }

    public Language(int id, string value ) 
    {
        this.Id = id;
        this.Value = value;
    }

    public static Language DeserializeLanguage(JSONNode _json)
    {
        return new csvLanguage.Language(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 内容
    /// </summary>
    public string Value { get; private set; }

    public const int __ID__ = -155393048;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Value:" + Value + ","
        + "}";
    }
    }
}
