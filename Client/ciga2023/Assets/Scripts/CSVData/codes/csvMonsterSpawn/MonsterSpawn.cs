
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.csvMonsterSpawn
{

public sealed class MonsterSpawn :  Bright.Config.BeanBase 
{
    public MonsterSpawn(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { var _json1 = _json["cooldown"]; if(!_json1.IsArray) { throw new SerializationException(); } Cooldown = new System.Collections.Generic.List<int>(_json1.Count); foreach(JSONNode __e in _json1.Children) { int __v;  { if(!__e.IsNumber) { throw new SerializationException(); }  __v = __e; }  Cooldown.Add(__v); }   }
        { if(!_json["count"].IsNumber) { throw new SerializationException(); }  Count = _json["count"]; }
        { var _json1 = _json["monster"]; if(!_json1.IsArray) { throw new SerializationException(); } Monster = new System.Collections.Generic.List<int>(_json1.Count); foreach(JSONNode __e in _json1.Children) { int __v;  { if(!__e.IsNumber) { throw new SerializationException(); }  __v = __e; }  Monster.Add(__v); }   }
        { var _json1 = _json["monsterWeight"]; if(!_json1.IsArray) { throw new SerializationException(); } MonsterWeight = new System.Collections.Generic.List<int>(_json1.Count); foreach(JSONNode __e in _json1.Children) { int __v;  { if(!__e.IsNumber) { throw new SerializationException(); }  __v = __e; }  MonsterWeight.Add(__v); }   }
    }

    public MonsterSpawn(int id, System.Collections.Generic.List<int> cooldown, int count, System.Collections.Generic.List<int> monster, System.Collections.Generic.List<int> monsterWeight ) 
    {
        this.Id = id;
        this.Cooldown = cooldown;
        this.Count = count;
        this.Monster = monster;
        this.MonsterWeight = monsterWeight;
    }

    public static MonsterSpawn DeserializeMonsterSpawn(JSONNode _json)
    {
        return new csvMonsterSpawn.MonsterSpawn(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 冷却 支持最小最大值
    /// </summary>
    public System.Collections.Generic.List<int> Cooldown { get; private set; }
    /// <summary>
    /// 选取圈个数 最小最大
    /// </summary>
    public int Count { get; private set; }
    /// <summary>
    /// 怪物组
    /// </summary>
    public System.Collections.Generic.List<int> Monster { get; private set; }
    /// <summary>
    /// 怪物组权重
    /// </summary>
    public System.Collections.Generic.List<int> MonsterWeight { get; private set; }

    public const int __ID__ = 349532552;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Cooldown:" + Bright.Common.StringUtil.CollectionToString(Cooldown) + ","
        + "Count:" + Count + ","
        + "Monster:" + Bright.Common.StringUtil.CollectionToString(Monster) + ","
        + "MonsterWeight:" + Bright.Common.StringUtil.CollectionToString(MonsterWeight) + ","
        + "}";
    }
    }
}
